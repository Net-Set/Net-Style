<html>
<head>
<title>Profile_at_35</title>

<meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
  <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>

<script src="jquery-3.4.1.min.js"></script>


<style>
body{
  font-family: 'Hind Guntur', sans-serif;
  color: #054231;
  display: flex;
  justify-content: center;
  background: #49afa8;
  background-image: url('https://github.com/OlgaKoplik/CodePen/blob/master/leaf.png?raw=true');
  background-repeat: no-repeat, no-repeat;
  background-position:  200% -40%;
  background-size: 80%;
}

.card{
  width: 310px;
  height: 627px;
  padding: 15px;
  margin-top: 40px;
  border-radius: 25px;
  display: flex;
  justify-content: center;
  box-shadow: 15px 10px 25px 0px  #3fa1a9;
  background: #fff;
  background-image: url('https://github.com/OlgaKoplik/CodePen/blob/master/leaf2.png?raw=true'), url('https://github.com/OlgaKoplik/CodePen/blob/master/leaf.png?raw=true');
  background-repeat: no-repeat, no-repeat;
  background-position: 120% -5%, 200% -40%;
  background-size: 40%, 80%;
  animation: open .5s;
}
@keyframes open {
  0%  {background-position: 166% -25%, 220% -69%;}
  100%{background-position: 120% -5%, 200% -40%;}
}
form{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.field{
  margin: 5px;
  display: flex;
  flex-direction: column;
  }
input[type="file"] {
  display: none;
}

.custom-file-upload {
  border-radius: 50%;
  display: inline-block;
  position: relative;
  padding: 6px;
  cursor: pointer;
  background: linear-gradient(270deg, #3fa1a9, #79f1a4);
  margin-bottom: 25px;
}

.img-wrap{
  position: relative;
  width: 200px;
  height: 200px;
  overflow: hidden;
  border-radius: 50%;
}
.img-upload:before{
  content: "\f093";
  font-size: 90px;
  position: absolute;
  padding-top: 80px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: #63d3a6;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  opacity: 0;
  transition: .5s ease;
  background-color: #fff;
}
.img-upload:hover:before{
 opacity: 1;
}
img {
  width: auto;
  height: 100%;
}

label{
  text-transform: uppercase;
  font-weight: 700;
  color: #676767;
}

input{
  border-radius: 15px;
  border: 1px solid #b7b7b7;
  padding: 5px 5px 5px 10px;
  font-size: 18px;
  transition: 0.2s;
}
input:focus{
  outline: none;
  border: 1px solid #64d488;
}
input::placeholder{
  color: #bebebe;
}
.name{ 
  text-align: center;
  text-transform: uppercase;
  font-weight: 700;
  color: #676767;
  max-width: 220px;
  overflow-wrap: break-word;
}
.status{
  text-align: center;
  max-width: 220px;
  overflow-wrap: break-word;
}
button{
  position: relative;
  color: #054231;
  letter-spacing: 1px;
  margin: 20px;
  font-size: 18px;
  padding: 10px;
  text-align: center;
  transition: 0.5s;
  border-radius: 10px;
  cursor: pointer;
  border-radius: 25px;
  border: none;
  background: #64d488;
}
.save{
  font-weight: 600;
  left: -20px;
  text-transform: uppercase;
  letter-spacing: 1px;
  width: 20px;
  box-shadow: 20px 0px 40px 0px  #63d3a6;
}
.edit{
  color: #fff;
  width: 180px;
}
button:hover{
  left: 0;
  color: #fff;
  width: 180px;
  box-shadow: 0px 0px 20px 0px  #63d3a6;
}
button:focus{
  outline: none;
}
.lds-ripple {
  display: inline-block;
  position: relative;
  width: 64px;
  height: 64px;
}
.lds-ripple div {
  position: absolute;
  border: 4px solid #fff;
  opacity: 1;
  border-radius: 50%;
  animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
}
.lds-ripple div:nth-child(2) {
  animation-delay: -0.5s;
}


.fa-instagram{
  position: absolute;
  color: #79f1a4;
  top: 3%;
  right: 2%;
  font-size: 38px;
}
.fa-instagram:hover{
  font-size: 42px;
  color: #caff81;
  transition: all .1s linear;
  cursor: pointer;
}

</style>
</head>
<body>
<div id="root"></div>
<a target="_blank" title="instagram/web__addict" href="https://www.instagram.com/web__addict/"><i class="fab fa-instagram"></i></a>
<script>

"use strict";

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ImgUpload = function ImgUpload(_ref) {
  var onChange = _ref.onChange,
      src = _ref.src;
  return React.createElement("label", {
    htmlFor: "photo-upload",
    className: "custom-file-upload fas"
  }, React.createElement("div", {
    className: "img-wrap img-upload"
  }, React.createElement("img", {
    for: "photo-upload",
    src: src
  })), React.createElement("input", {
    id: "photo-upload",
    type: "file",
    onChange: onChange
  }));
};

var Name = function Name(_ref2) {
  var onChange = _ref2.onChange,
      value = _ref2.value;
  return React.createElement("div", {
    className: "field"
  }, React.createElement("label", {
    htmlFor: "name"
  }, "name:"), React.createElement("input", {
    id: "name",
    type: "text",
    onChange: onChange,
    maxlength: "25",
    value: value,
    placeholder: "Alexa",
    required: true
  }));
};

var Status = function Status(_ref3) {
  var onChange = _ref3.onChange,
      value = _ref3.value;
  return React.createElement("div", {
    className: "field"
  }, React.createElement("label", {
    htmlFor: "status"
  }, "status:"), React.createElement("input", {
    id: "status",
    type: "text",
    onChange: onChange,
    maxLength: "35",
    value: value,
    placeholder: "It's a nice day!",
    required: true
  }));
};

var Profile = function Profile(_ref4) {
  var onSubmit = _ref4.onSubmit,
      src = _ref4.src,
      name = _ref4.name,
      status = _ref4.status;
  return React.createElement("div", {
    className: "card"
  }, React.createElement("form", {
    onSubmit: onSubmit
  }, React.createElement("h1", null, "Profile Card"), React.createElement("label", {
    className: "custom-file-upload fas"
  }, React.createElement("div", {
    className: "img-wrap"
  }, React.createElement("img", {
    for: "photo-upload",
    src: src
  }))), React.createElement("div", {
    className: "name"
  }, name), React.createElement("div", {
    className: "status"
  }, status), React.createElement("button", {
    type: "submit",
    className: "edit"
  }, "Edit Profile ")));
};

var Edit = function Edit(_ref5) {
  var onSubmit = _ref5.onSubmit,
      children = _ref5.children;
  return React.createElement("div", {
    className: "card"
  }, React.createElement("form", {
    onSubmit: onSubmit
  }, React.createElement("h1", null, "Profile Card"), children, React.createElement("button", {
    type: "submit",
    className: "save"
  }, "Save ")));
};

var CardProfile =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CardProfile, _React$Component);

  function CardProfile() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, CardProfile);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      file: '',
      imagePreviewUrl: 'https://github.com/OlgaKoplik/CodePen/blob/master/profile.jpg?raw=true',
      name: '',
      status: '',
      active: 'edit'
    });

    _defineProperty(_assertThisInitialized(_this), "photoUpload", function (e) {
      e.preventDefault();
      var reader = new FileReader();
      var file = e.target.files[0];

      reader.onloadend = function () {
        _this.setState({
          file: file,
          imagePreviewUrl: reader.result
        });
      };

      reader.readAsDataURL(file);
    });

    _defineProperty(_assertThisInitialized(_this), "editName", function (e) {
      var name = e.target.value;

      _this.setState({
        name: name
      });
    });

    _defineProperty(_assertThisInitialized(_this), "editStatus", function (e) {
      var status = e.target.value;

      _this.setState({
        status: status
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleSubmit", function (e) {
      e.preventDefault();
      var activeP = _this.state.active === 'edit' ? 'profile' : 'edit';

      _this.setState({
        active: activeP
      });
    });

    return _this;
  }

  _createClass(CardProfile, [{
    key: "render",
    value: function render() {
      var _this$state = this.state,
          imagePreviewUrl = _this$state.imagePreviewUrl,
          name = _this$state.name,
          status = _this$state.status,
          active = _this$state.active;
      return React.createElement("div", null, active === 'edit' ? React.createElement(Edit, {
        onSubmit: this.handleSubmit
      }, React.createElement(ImgUpload, {
        onChange: this.photoUpload,
        src: imagePreviewUrl
      }), React.createElement(Name, {
        onChange: this.editName,
        value: name
      }), React.createElement(Status, {
        onChange: this.editStatus,
        value: status
      })) : React.createElement(Profile, {
        onSubmit: this.handleSubmit,
        src: imagePreviewUrl,
        name: name,
        status: status
      }));
    }
  }]);

  return CardProfile;
}(React.Component);

ReactDOM.render(React.createElement(CardProfile, null), document.getElementById('root'));
</script>
</body>
</html>